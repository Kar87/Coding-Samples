/// <summary>
/// Code for creating customer object and calculating billamount 
/// based on the KWH used
/// Author: Sai Shalini Karaikatte Venugopal
/// Created Date: 07-JUL-2021
/// </summary>

namespace CustomerData
{
    /// <summary>
    /// Class customer that contains all the customer parameters and calculates 
    /// Bill amounts based on KWH used
    /// </summary>
    public class Customer
    {
        const decimal CHARGE = 0.07m; // declaring constant for charge per unit
        const decimal ADMINCHARGE = 12.00m; // declaring constant for administrative charges
        private static int nextNo = 100; // Declaring starting value of account number
        private int accountId; // Declaring integer for account ID
        private string firstName, lastName; // Declaring customer first and lasat name as string
        private decimal unitsUsed, billAmount; // Declaring decimals for units used and
                                               // calculated   bill amount     
        public int AccountId //getting account id for displaying autogenerated account id
        {
            get { return accountId; }
        }

        //Constructor with all customer details
        public Customer(string firstName ="", string lastName ="", decimal unitsUsed = 0m, decimal billAmount = 0m)
        {
            accountId = nextNo;
            nextNo++;
            
            this.firstName = firstName;
            this.lastName = lastName;
            this.unitsUsed = unitsUsed;
            this.billAmount = GetBillAmount(unitsUsed);           
        }
        /// <summary>
        /// Calculates bill amount based on units used
        /// </summary>
        /// <param name="unit">KWH used ny the customer</param>
        /// <returns>Calculated Bill Amount = "bill"</returns>

        public static decimal GetBillAmount(decimal unit)
        {
            
            decimal bill;
            if (unit >= 0)// when units used is 0 or positive
            {
                bill = ADMINCHARGE + (unit * CHARGE);
            }
            else//when units used are negative
                bill = 0m;
            return bill;
         }
        /// <summary>
        /// Public methos that returns string value
        /// </summary>
        /// <returns>String value with all customer details</returns>

        public override string ToString()
        {
            return "Account No: " + accountId + "| First Name: " + firstName + "| Last Name: " + lastName + "| kWh Used:" + unitsUsed + "| Bill Amount is: $" + billAmount;
        }

    }
}
